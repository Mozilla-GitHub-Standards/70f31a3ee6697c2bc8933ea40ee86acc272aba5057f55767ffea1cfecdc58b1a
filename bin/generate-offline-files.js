#! /usr/bin/env node

"use strict";
const path = require('path');
const fs = require("fs");
const exec = require("child_process").exec;
const fileName = "js/mainSiteFiles.js";

// Find css and JS files
const findJs = fileFinder(`js`, `-iname "*.js"`);
const findCss = fileFinder(`css`, `-iname "*.css" -or -iname "*.svg" -or -iname "*.png"`);

// Process and generate file
Promise.all([findJs,findCss])
  .then(processResults)
  .then(generateTemplate)
  .then(writeFile)
  .then(done => console.log("Ok!"))
  .catch(err => console.error(err));

function fileFinder(dir, pattern){
  return new Promise((resolve, reject) => {
    var command = `find ${dir} ${pattern}`;
    exec(command, (err, stdout) => {
      return (err) ? reject(err) : resolve(stdout);
    });
  });
}

function processResults(results){
  const paths = results
    .reduce((current, next) => next.concat(current), [])
    .split("\n")
    .filter(item => item)
    .map(item => `  "${item}",`)
    .sort();
  return Promise.resolve(paths);
}

function generateTemplate(paths){
  var mainSiteFiles = `/**
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */
/*exports mainSiteFiles*/

/**
 * THIS FILE IS AUTOMATICALLY GENERATED!
 * DO NOT MODIFY OR IT WILL JUST GET TRASHED.
 *
 * See: ${path.relative(__dirname+"/..", __filename)}
 */
"use strict";
const mainSiteFiles = [ // jshint ignore:line
${paths.join("\n")}
];
`;
  return Promise.resolve(mainSiteFiles.trim());
}

function writeFile(template){
  return new Promise((resolve, reject) => {
    fs.writeFile(fileName, template, (err) => {
      return (err) ? reject(err) : resolve();
    });
  });
}
